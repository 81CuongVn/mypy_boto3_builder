from botocore.paginate import PageIterator, Paginator
from collections.abc import Generator
from typing import Any

class AioPageIterator(PageIterator):
    def __aiter__(self): ...
    resume_token: Any
    async def __anext__(self) -> Generator[Any, None, None]: ...
    def result_key_iters(self): ...
    async def build_full_result(self): ...
    async def search(self, expression) -> Generator[Any, None, None]: ...

class AioPaginator(Paginator):
    PAGE_ITERATOR_CLS: Any

class ResultKeyIterator:
    result_key: Any
    def __init__(self, pages_iterator, result_key) -> None: ...
    def __aiter__(self): ...
    async def __anext__(self) -> Generator[Any, None, None]: ...
