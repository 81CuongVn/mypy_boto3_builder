name: Check boto3 version and publish on new

on:
  schedule:
    - cron: "0 0/2 * * *"
  workflow_dispatch: {}

jobs:
  timer-check:
    env:
      PIP_NO_CACHE_DIR: false
      PIP_USER: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install latest boto3
        run: |
          rm -rf mypy_boto3_builder
          python -m pip install -U boto3 botocore
      - name: Extract versions from pip
        id: vars
        run: |
          BOTO3_VERSION=$(python -c 'import boto3; print(boto3.__version__)')
          BOTOCORE_VERSION=$(python -c 'import botocore; print(botocore.__version__)')
          LAST_PACKAGE_VERSION=$(curl https://pypi.org/pypi/boto3-stubs/json | jq -r '.releases|keys[]' | grep -F "${BOTO3_VERSION}." | sort -k 4,4 -t '.' | tail -1)
          BUILD_VERSION="${BOTO3_VERSION}.0"
          SKIP="false"
          if [ ! -z ${LAST_PACKAGE_VERSION} ]; then
            echo Build ${LAST_PACKAGE_VERSION} found, skipping the rest
            SKIP="true"
          fi

          echo Boto3 version: ${BOTO3_VERSION}
          echo Botocore version: ${BOTOCORE_VERSION}
          echo Build version: ${BUILD_VERSION}
          echo Skip: ${SKIP}

          echo "##[set-output name=skip;]$(echo ${SKIP})"
          echo "##[set-output name=build_version;]$(echo ${BUILD_VERSION})"
      - name: Install builder
        if: steps.vars.outputs.skip == 'false'
        run: |
          python -m pip install mypy_boto3_builder
          python -m pip install mypy
      - name: Integration tests
        if: steps.vars.outputs.skip == 'false'
        run: |
          scripts/integration.sh
      - name: Build packages
        if: steps.vars.outputs.skip == 'false'
        env:
          BUILD_VERSION: ${{ steps.vars.outputs.build_version }}
        run: |
          rm -rf mypy_boto3_output/*
          scripts/build.sh --panic -b $BUILD_VERSION
      - name: Install dependencies for publishing
        if: steps.vars.outputs.skip == 'false'
        run: |
          python -m pip install setuptools wheel twine
      - name: Publish to PyPI
        if: steps.vars.outputs.skip == 'false'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          scripts/release.sh
