name: Code style and test
concurrency:
  group: on_push
  cancel-in-progress: true

on:
  push:
    paths-ignore:
      - pyproject.toml
      - setup.cfg
      - CHANGELOG.md
  workflow_dispatch: {}

jobs:
  unit-tests:
    name: Code style & unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        id: python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - name: Install poetry
        run: |
          python -m pip install -U poetry pip wheel aiobotocore
      - name: Install dependencies
        run: |
          poetry install -n
      - name: Install Node.js dependencies
        run: |
          npm install -g pyright
      - name: Lint
        run: |
          python -m flake8 mypy_boto3_builder
          npx pyright mypy_boto3_builder
          python -m mypy mypy_boto3_builder
          python -m black --check mypy_boto3_builder tests
          python -m isort -c mypy_boto3_builder tests
      - name: Test
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          python -m pytest

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        id: python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - name: Install poetry
        run: |
          python -m pip install -U poetry pip wheel aiobotocore
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          poetry install -n
      - name: Install Node.js dependencies
        run: |
          npm install -g pyright
      - name: Install builder
        run: |
          python -m pip install .
      - name: Integration tests
        run: |
          python scripts/integration.py
