name: Code style and test

on:
  push:
    paths-ignore:
      - mypy_boto3_builder/version.py
      - CHANGELOG.md

jobs:
  unit-tests:
    name: Code style & unit tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ matrix.python-version }}-package-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ matrix.python-version }}-package-
      - name: Install dependencies
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install -r requirements.txt
      - name: Install
        run: |
          python setup.py install
      - name: Lint
        run: |
          pylint mypy_boto3_builder
          mypy mypy_boto3_builder
      - name: Test
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          pytest

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ matrix.python-version }}-package-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ matrix.python-version }}-package-
      - name: Install dependencies
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install -r requirements.txt
      - name: Install
        run: |
          python setup.py install
      - name: Build packages
        env:
          BUILD_VERSION: ${{ steps.vars.outputs.build_version }}
          BOTO3_VERSION: ${{ steps.vars.outputs.boto3_version }}
          BOTOCORE_VERSION: ${{ steps.vars.outputs.botocore_version }}
        run: |
          rm -rf mypy_boto3_output/*
          scripts/build.sh --panic -s dynamodb ec2 emr s3 secretsmanager iam sqs
      - name: Integration tests
        run: |
          scripts/integration.sh
